-- MySQL Script generated by MySQL Workbench
-- Sat Apr  5 15:13:54 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `Administrativos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Administrativos` (
  `numeroDoc` VARCHAR(45) NOT NULL,
  `nombreCompleto` VARCHAR(70) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `tipoDoc` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`numeroDoc`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `Profesor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Profesor` (
  `numeroDoc` VARCHAR(32) NOT NULL,
  `nombreCompleto` VARCHAR(70) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `tipoDoc` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`numeroDoc`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE);


-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user` (
  `username` VARCHAR(16) NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `rol` VARCHAR(45) NOT NULL,
  `create_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Administrativos_numeroDoc` VARCHAR(45) NOT NULL,
  `Profesor_numeroDoc` VARCHAR(32) NOT NULL,
  INDEX `fk_user_Administrativos_idx` (`Administrativos_numeroDoc` ASC) VISIBLE,
  INDEX `fk_user_Profesor1_idx` (`Profesor_numeroDoc` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  UNIQUE INDEX `rol_UNIQUE` (`rol` ASC) VISIBLE,
  CONSTRAINT `fk_user_Administrativos`
    FOREIGN KEY (`Administrativos_numeroDoc`)
    REFERENCES `Administrativos` (`numeroDoc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_Profesor1`
    FOREIGN KEY (`Profesor_numeroDoc`)
    REFERENCES `Profesor` (`numeroDoc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `Estudiantes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Estudiantes` (
  `numeroDocEstudiante` VARCHAR(45) NOT NULL,
  `tipoDoc` VARCHAR(45) NOT NULL,
  `informe` VARCHAR(45) NULL,
  `primerNombre` VARCHAR(30) NOT NULL,
  `segundoNombre` VARCHAR(30) NULL,
  `primerApellido` VARCHAR(32) NOT NULL,
  `segundoApellido` VARCHAR(32) NOT NULL,
  `genero` VARCHAR(2) NOT NULL,
  `fechaNacimiento` DATETIME NOT NULL,
  `estadoCivil` VARCHAR(45) NULL,
  `grupoEtnico` VARCHAR(45) NULL,
  `factorVulnerabilidad` VARCHAR(45) NULL,
  `paisNacimiento` VARCHAR(45) NOT NULL,
  `municipioNacimiento` VARCHAR(45) NOT NULL,
  `municipioResidencia` VARCHAR(45) NOT NULL,
  `direccionResidencia` VARCHAR(45) NOT NULL,
  `zonaEstudiante` VARCHAR(45) NULL,
  `mundo` VARCHAR(45) NOT NULL,
  `modalidad` VARCHAR(45) NOT NULL,
  `dias` VARCHAR(45) NOT NULL,
  `horarioInicio` VARCHAR(45) NOT NULL,
  `horarioFin` VARCHAR(45) NOT NULL,
  `codigoDaneIE` VARCHAR(45) NULL,
  `subregionIE` VARCHAR(45) NULL,
  `municipioIE` VARCHAR(45) NULL,
  `institucionEducativa` VARCHAR(45) NOT NULL,
  `codigoDaneSede` VARCHAR(45) NULL,
  `sede` VARCHAR(45) NULL,
  `grado` VARCHAR(2) NOT NULL,
  `jornada` VARCHAR(2) NOT NULL,
  `nit` VARCHAR(45) NULL,
  `proveedor` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`numeroDocEstudiante`));


-- -----------------------------------------------------
-- Table `Asistencia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Asistencia` (
  `numeroDocEstudiante` VARCHAR(45) NOT NULL,
  `instucionEducativa` VARCHAR(45) NOT NULL,
  `fechaAsistencia` DATETIME NOT NULL,
  `Asistio` TINYINT NOT NULL,
  `Estudiantes_numeroDocEstudiante` VARCHAR(45) NOT NULL,
  `Profesor_numeroDoc` VARCHAR(32) NOT NULL,
  `Administrativos_numeroDoc` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`numeroDocEstudiante`, `instucionEducativa`),
  INDEX `fk_Asistencia_Estudiantes1_idx` (`Estudiantes_numeroDocEstudiante` ASC) VISIBLE,
  INDEX `fk_Asistencia_Profesor1_idx` (`Profesor_numeroDoc` ASC) VISIBLE,
  INDEX `fk_Asistencia_Administrativos1_idx` (`Administrativos_numeroDoc` ASC) VISIBLE,
  CONSTRAINT `fk_Asistencia_Estudiantes1`
    FOREIGN KEY (`Estudiantes_numeroDocEstudiante`)
    REFERENCES `Estudiantes` (`numeroDocEstudiante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Asistencia_Profesor1`
    FOREIGN KEY (`Profesor_numeroDoc`)
    REFERENCES `Profesor` (`numeroDoc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Asistencia_Administrativos1`
    FOREIGN KEY (`Administrativos_numeroDoc`)
    REFERENCES `Administrativos` (`numeroDoc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Administrativos_has_Estudiantes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Administrativos_has_Estudiantes` (
  `Administrativos_numeroDoc` VARCHAR(45) NOT NULL,
  `Estudiantes_numeroDocEstudiante` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`Administrativos_numeroDoc`, `Estudiantes_numeroDocEstudiante`),
  INDEX `fk_Administrativos_has_Estudiantes_Estudiantes1_idx` (`Estudiantes_numeroDocEstudiante` ASC) VISIBLE,
  INDEX `fk_Administrativos_has_Estudiantes_Administrativos1_idx` (`Administrativos_numeroDoc` ASC) VISIBLE,
  CONSTRAINT `fk_Administrativos_has_Estudiantes_Administrativos1`
    FOREIGN KEY (`Administrativos_numeroDoc`)
    REFERENCES `Administrativos` (`numeroDoc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Administrativos_has_Estudiantes_Estudiantes1`
    FOREIGN KEY (`Estudiantes_numeroDocEstudiante`)
    REFERENCES `Estudiantes` (`numeroDocEstudiante`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `Administrativos_has_Profesor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Administrativos_has_Profesor` (
  `Administrativos_numeroDoc` VARCHAR(45) NOT NULL,
  `Profesor_numeroDoc` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`Administrativos_numeroDoc`, `Profesor_numeroDoc`),
  INDEX `fk_Administrativos_has_Profesor_Profesor1_idx` (`Profesor_numeroDoc` ASC) VISIBLE,
  INDEX `fk_Administrativos_has_Profesor_Administrativos1_idx` (`Administrativos_numeroDoc` ASC) VISIBLE,
  CONSTRAINT `fk_Administrativos_has_Profesor_Administrativos1`
    FOREIGN KEY (`Administrativos_numeroDoc`)
    REFERENCES `Administrativos` (`numeroDoc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Administrativos_has_Profesor_Profesor1`
    FOREIGN KEY (`Profesor_numeroDoc`)
    REFERENCES `Profesor` (`numeroDoc`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
